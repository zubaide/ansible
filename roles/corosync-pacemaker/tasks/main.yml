---

- name: Install packages for CentOS Stream 8
  dnf: 
    name:
      - pacemaker
      - corosync
      - pcs
      - clufter-lib-pcs
      - fence-agents-all
    enablerepo: ha 
    state: present
  when: ansible_distribution == 'CentOS' and ansible_distribution_major_version == '8'

- name: Install packages for Rocky Linux
  dnf:
    name:
      - pacemaker
      - corosync
      - pcs
      - fence-agents-all
    state: present
  when: ansible_distribution == 'Rocky' and ansible_distribution_major_version == '9'


- name: start and enable pcsd service
  service:
    name: pcsd
    state: started
    enabled: yes
  become: yes

- name: Add firewall rules for cluster communication
  firewalld:
    port: "{{ item }}"
    permanent: yes
    state: enabled
  loop:
    - 2224/tcp
    - 3121/tcp
    - 21064/tcp
  become: yes

- name: Reload firewalld
  command:
    cmd: firewall-cmd --reload
  become: yes


- name: Setup authentication for pcsd
  command:
    cmd: "echo {{ pcsd_password }} | pcs host auth {{ cluster_nodes }} -u hacluster"
  become: yes
  vars:
    pcsd_password: ntserverp
    cluster_nodes:
      - 192.168.88.125
      - 192.168.88.126
      - 192.168.88.112
      - 192.168.88.113
      - 192.168.88.114
      - 192.168.88.115

- name: Ensure corosync user exists
  user:
    name: corosync
    system: yes
  become: yes
     
- name: Copy Corosync configuration for cluster1
  copy:
    src: cluster1.conf
    dest: /etc/corosync/corosync.conf
  when: inventory_hostname in ['node1', 'node2']
  become: yes

- name: Copy Corosync configuration for cluster2
  copy:
    src: cluster2.conf
    dest: /etc/corosync/corosync.conf
  when: inventory_hostname in ['node3', 'node4', 'node5', 'node6'] 
  become: yes
 
- name: Start and Enable Corosync and Pacemaker
  service:
    name: "{{ item }}"
    state: started
    enabled: yes
  loop:
    - corosync
    - pacemaker

- name: Check if cluster is already set up
  command: pcs status xml
  register: cluster_status
  failed_when: false
  changed_when: false
  become: yes

- name: Setup cluster1
  command:
    cmd: "pcs cluster setup cluster1 {{ cluster_nodes | join(' ') }}"
  when: inventory_hostname == "node1"
  become: yes
  vars: 
    cluster1_nodes:
      - 192.168.88.125
      - 192.168.88.126

- name: Setup cluster2
  command: 
    cmd: "pcs cluster setup cluster2 {{ cluster2_nodes | join('') }}"
  when: inventory_hostname == "node3"
  become: yes
  vars: 
    cluster2_nodes: 
      - 192.168.88.112
      - 192.168.88.113
      - 192.168.88.114
      - 192.168.88.115

- name: Start cluster
  command:
    cmd: "pcs cluster start --all"
  become: yes
 
- name: Enable cluster at boot
  command:
    cmd: "pcs cluster enable --all"
  become: yes

